# This file includes:
# - Google Test
# - Coverage information (target: coverage)

# Note: Intentionally not linking the tests against the .a generated in the parent
# as we need to recompile everything with --coverage support

if(CMAKE_COMPILER_IS_GNUCXX)
  add_compile_options(--coverage)
  add_link_options(--coverage)
endif()

enable_testing()

FetchContent_Declare(
  googletest
  URL https://github.com/google/googletest/archive/refs/heads/main.zip
)
# For Windows: Prevent overriding the parent project's compiler/linker settings
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
FetchContent_MakeAvailable(googletest)

# Add test files
set(TEST_SOURCES
    test/cpp/CanDevice_test.cpp
    test/cpp/CanFrame_test.cpp
    test/cpp/CanExtra_test.cpp
    test/cpp/CanStats_test.cpp
    test/cpp/LogIt_test.cpp
)


add_executable(CanModuleTest ${SOURCES} ${VENDOR_SOURCES} ${TEST_SOURCES})

target_link_libraries(
  CanModuleTest gtest_main LogIt
)

target_include_directories(CanModuleTest PRIVATE ${logit_SOURCE_DIR}/include)

include(GoogleTest)
gtest_discover_tests(CanModuleTest)

find_program(LCOV lcov)
find_program(GENHTML genhtml)

if(LCOV AND GENHTML)
  add_custom_target(coverage
    COMMAND ${CMAKE_CTEST_COMMAND} --output-on-failure
    COMMAND ${LCOV} --capture --directory . --output-file coverage.info
    COMMAND ${LCOV} --remove coverage.info "/usr/*" "*/gtest/*" "*/test/*" --output-file coverage.info
    COMMAND ${GENHTML} coverage.info --output-directory coverage
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
    COMMENT "Generating coverage report"
    VERBATIM
  )
endif()
