image: gitlab-registry.cern.ch/linuxsupport/alma9-base:latest

stages:
  - unstagged

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "api"

Docker Image Alma 9:
  stage: unstagged
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"/ci/docker/alma9/
      --dockerfile "${CI_PROJECT_DIR}"/ci/docker/alma9/Dockerfile
      --destination "${CI_REGISTRY_IMAGE}/alma9-build:${CI_COMMIT_TAG}"
      --destionation "${CI_REGISTRY_IMAGE}/alma9-build:latest"
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  rules:
    - changes:
        - ci/docker/alma9/trigger

Compile on Windows:
  stage: unstagged
  script:
    - sleep 45s && echo "Compiling on Windows..."
    # Add your Windows compilation commands here
  artifacts:
    paths:
      - windows_compiled_artifacts/

Compile on Linux:
  needs:
    - job: Docker Image Alma 9
      optional: true
  stage: unstagged
  script:
    - sleep 30s && echo "Compiling on Linux..."
    # Add your Linux compilation commands here
  artifacts:
    paths:
      - linux_compiled_artifacts/

Unit Test on Windows:
  stage: unstagged
  needs:
    - Compile on Windows
  script:
    - sleep 120s && echo "Running Unit Tests on Windows..."
    # Add your Windows unit test commands here

Unit Test on Linux:
  stage: unstagged
  needs:
    - Compile on Linux
  script:
    - echo "Running Unit Tests on Linux..."
    # Add your Linux unit test commands here

Build Documentation:
  stage: unstagged
  script:
    - echo "Building Documentation..."
    # Add your documentation build commands here

Run Sanity Checks:
  stage: unstagged
  script:
    - echo "Running Sanity Checks..."
    # Add your sanity check commands here

Create Release:
  stage: unstagged
  needs:
    - Compile on Windows
    - Compile on Linux
  script:
    - echo "Creating Release..."
    # Combine the compiled artifacts from Windows and Linux
    # Add your release creation commands here
  artifacts:
    paths:
      - release/
